/*
Balanced string

Given an integer N.Create a string using only lowercase characters from a to z that follows the given rules.

When N is even:

Use N/2 characters from the beginning of a-z and N/2 characters from the ending of a-z.

When N is greater than 26,continue repeating the instructions until length of string becomes N.

When N is odd:

Case 1: If the sum of digits of N is even, Select (N+1)/2 characters from the beginning of a-z and (N-1)/2 characters from the ending of a-z.

Case 2: If the sum of digits of N is odd, Select (N-1)/2 characters from the beginning of a-z and (N+1)/2 characters from the ending of a-z.

When N is greater than 26,continue repeating the instructions until length of string becomes N.

 

Example 1:

Input: 
N=21
Output: 
abcdefghijpqrstuvwxyz
Explanation:
Since 21 is odd and sum of digits
of 21 is also odd,we take (21-1)/2=10 
characters from the beginning and 
(21+1)/2=11 characters from the 
end of a-z.
Example 2:

Input:
N=28 
Output: 
abcdefghijklmnopqrstuvwxyzaz
Explanation: 
Since 28>26, we keep repeating 
the process until length of string becomes 
28.
 

Your Task:
You don't need to read input or print anything. Your task is to complete the function BalancedString() which takes the integer N as input parameter and returns the string created using given procedures.
 

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)
 

Constraints:
1 <= N <= 105
*/

//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    // Position this line where user code will be pasted.
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            int N = Integer.parseInt(read.readLine());
            Solution ob = new Solution();
            System.out.println(ob.BalancedString(N));
        }
    }
}
// } Driver Code Ends


// User function Template for Java



// User function Template for Java

class Solution {
    static String BalancedString(int n) {
        int i=0;
        int j=25;
        StringBuffer ans=new StringBuffer();
        int z=n/26;
        for(i=0;i<z;i++)
        {
            ans.append("abcdefghijklmnopqrstuvwxyz");
        }
        i=0;
        if(n%2==0)
        {
           n=n%26;
           for(i=0;i<n/2;i++)
           {
               ans.append((char)(i+'a'));
           }
            for(j=26-(n/2);j<=25;j++)
            {
                ans.append((char)(j+'a'));
            }
        }
        else
        {
            int sum=0;
            int temp=n;
            n=n%26;
            while(temp>0)
            {
                sum=sum+(temp%10);
                temp=temp/10;
            }
            if(sum%2==0)
            {
                 for(i=0;i<(n+1)/2;i++)
                ans.append((char)(i+'a'));
                for(j=26-((n-1)/2);j<=25;j++)
                 ans.append((char)(j+'a'));
            }

            else
            {
                for(i=0;i<(n-1)/2;i++)
                ans.append((char)(i+'a'));
                for(j=26-(n+1)/2;j<=25;j++)
                 ans.append((char)(j+'a'));
            }
        }
        return ans.toString();
    }
}
