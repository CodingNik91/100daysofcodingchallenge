//{ Driver Code Starts
// Initial Template for Java
import java.util.*;
import java.io.*;
// Position this line where user code will be pasted.
class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String[] input = new String[2]; 
            input = read.readLine().split(" "); 
            String S = input[0];
            int k =  Integer.parseInt(input[1]);
            Solution ob = new Solution();

            System.out.println(ob.lexicographicallySmallest(S, k));
        }
    }
}
// } Driver Code Ends


// User function Template for Java
class Solution {
    static String lexicographicallySmallest(String S, int k) {
        
        if(power(S.length()))
            k/=2;
        else
            k*=2;

        if(k>=S.length())
            return "-1";

        Stack<Character> stk=new Stack<>();
        int count=0;
        for(int i=0;i<S.length();i++)
        {
            char ch=S.charAt(i);
            while(!stk.empty() && count<k && stk.peek()>ch)
            {
                count++;
                stk.pop();
            }
            stk.push(ch);
        }

        while(stk.size()>S.length()-k)
        {
            stk.pop();
        }

        StringBuilder ans=new StringBuilder();
        while(!stk.empty())
        {
            ans.append(stk.peek());
            stk.pop();
        }
        ans.reverse();
        return ans.toString();
    }

    static boolean power(int n)
    {
        if (n == 0)
            return false;

        while (n != 1) {
            if (n % 2 != 0)
                return false;
            n = n / 2;
        }
        return true;
    }
}
